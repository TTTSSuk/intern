//pages\api\admin-login.ts
import type { NextApiRequest, NextApiResponse } from "next";
import clientPromise from "@/lib/mongodb";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") {
    (res as any).setHeader("Allow", ["POST"]);
    return (res as any).status(405).json({ message: `Method ${req.method} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï` });
  }

  try {
    const { adminId, password } = req.body;

    if (!adminId || !password) {
      return (res as any).status(400).json({ message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà adminId ‡πÅ‡∏•‡∏∞ password" });
    }

    console.log("üîê Login attempt for AdminId:", adminId); // Debug log

    const client = await clientPromise;
    const db = client.db("login-form-app");
    const adminsCollection = db.collection("admins");

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ admin ‡∏ï‡∏≤‡∏° AdminId
    const admin = await adminsCollection.findOne({ AdminId: adminId });

    console.log("üìÑ Admin found:", admin ? "Yes" : "No"); // Debug log

    if (!admin || admin.password !== password) {
      console.log("‚ùå Invalid credentials"); // Debug log
      return (res as any).status(401).json({ message: "Admin ID ‡∏´‡∏£‡∏∑‡∏≠ Password ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" });
    }

    console.log("‚úÖ Login successful for:", admin.name || admin.AdminId); // Debug log

    // ‚úÖ ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö AdminId ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢
    return (res as any).status(200).json({ 
      success: true,
      message: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
      adminId: admin.AdminId, // ‚úÖ ‡∏™‡πà‡∏á AdminId ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
      name: admin.name || "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô" // ‚úÖ ‡∏™‡πà‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    });
  } catch (error) {
    console.error("‚ùå Login error:", error);
    return (res as any).status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
  }
}

// import type { NextApiRequest, NextApiResponse } from "next";
// import clientPromise from "@/lib/mongodb";

// export default async function handler(req: NextApiRequest, res: NextApiResponse) {
//   if (req.method !== "POST") {
//     (res as any).setHeader("Allow", ["POST"]);
//     return (res as any).status(405).json({ message: `Method ${req.method} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï` });
//   }

//   try {
//     const { adminId, password } = req.body;

//     if (!adminId || !password) {
//       return (res as any).status(400).json({ message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà adminId ‡πÅ‡∏•‡∏∞ password" });
//     }

//     const client = await clientPromise;
//     const db = client.db("login-form-app");
//     const adminsCollection = db.collection("admins");

//     // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ admin ‡∏ï‡∏≤‡∏° AdminId
//     const admin = await adminsCollection.findOne({ AdminId: adminId });

//     if (!admin || admin.password !== password) {
//       return (res as any).status(401).json({ message: "Admin ID ‡∏´‡∏£‡∏∑‡∏≠ Password ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" });
//     }

//     // ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢
//     return (res as any).status(200).json({ message: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"});
//   } catch (error) {
//     console.error(error);
//     return (res as any).status(500).json({ message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
//   }
// }
